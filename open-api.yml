openapi: 3.0.3
info:
  title: Coupon Service API
  version: 1.0.0

paths:
  /coupon-books:
    get:
      tags: ["Coupon Books"]
      summary: Retrieve a list of coupon books with optional filters
      operationId: getCouponBooks
      security:
        - BearerAuth: []
      parameters:
        - name: name
          in: query
          schema:
            type: string
          description: Filter by coupon book name
        - name: client_id
          in: query
          schema:
            type: string
          description: Filter by client ID
        - name: max_redemptions_per_coupon
          in: query
          schema:
            type: integer
          description: Filter by max redemptions per coupon
        - name: max_coupons_per_member
          in: query
          schema:
            type: integer
          description: Filter by max coupons per member
        - name: valid_from
          in: query
          schema:
            type: string
            format: date-time
          description: Filter by valid from date
        - name: valid_to
          in: query
          schema:
            type: string
            format: date-time
          description: Filter by valid to date
        - name: discount_type
          in: query
          schema:
            type: string
            enum: [percentage, amount]
          description: Filter by discount type
        - name: discount_value
          in: query
          schema:
            type: integer
          description: Filter by discount value
        - name: enabled
          in: query
          schema:
            type: boolean
          description: Filter by enabled status
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: List of coupon books retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponBookGetResponse"
        "400":
          description: "Bad Request"
    post:
      tags: ["Coupon Books"]
      summary: Create a new coupon book
      operationId: createCouponBook
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCouponBookRequest"
      responses:
        "201":
          description: Coupon book created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponBook"
        "400":
          description: "Bad Request"

  /coupon-book/{coupon_book_id}:
    get:
      tags: ["Coupon Books"]
      summary: Get the detail of a coupon book
      operationId: getCouponBook
      parameters:
        - name: coupon_book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Coupon book details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponBook"

  /coupon-book/{coupon_book_id}/codes:
    post:
      tags: ["Coupon Books"]
      summary: Upload a code list to an existing Coupon Book
      description: "Coupon list consist of a csv file with the following format: "
      operationId: uploadCodeList
      security:
        - BearerAuth: []
      parameters:
        - name: coupon_book_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UploadCodeListRequest"
      responses:
        "200":
          description: Codes uploaded successfully

  /coupons:
    get:
      tags: ["Coupons"]
      summary: Retrieve a list of coupon with optional filters
      operationId: getCoupons
      security:
        - BearerAuth: []
      parameters:
        - name: client_id
          in: query
          schema:
            type: string
            description: Filter by client ID
        - name: redeemed
          in: query
          schema:
            type: boolean
        - name: locked_at
          in: query
          schema:
            type: timestamp
        - name: assigned
          in: query
          schema:
            type: boolean
        - name: coupon_book_id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of coupon retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponGetResponse"

        "400":
          description: "Bad Request"

  /coupons/assign-random:
    post:
      tags: ["Coupons"]
      summary: Assign a new random coupon code to a user
      operationId: assignRandomCoupon
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignRandomCouponRequest"
      responses:
        "200":
          description: Coupon assigned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                concurrencyError:
                  value:
                    message: "Unable to assign coupon due to concurrency issues, please retry"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                expiredCouponBook:
                  value:
                    message: "Coupon book is expired or not yet available"
                maxCoupons:
                  value:
                    message: "Max coupons per member reached as stated by coupon book config."
                noCoupons:
                  value:
                    message: "No coupons available on the coupon book"

  /coupons/{coupon_code}/assign:
    post:
      tags: ["Coupons"]
      summary: Assign a given coupon code to a user
      operationId: assignSpecificCoupon
      security:
        - BearerAuth: []
      parameters:
        - name: coupon_code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignSpecificCouponRequest"
      responses:
        "200":
          description: Coupon assigned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                alreadyAssigned:
                  value:
                    message: "Coupon was already assigned"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                expiredCouponBook:
                  value:
                    message: "Coupon book is expired or not yet available"
                maxCoupons:
                  value:
                    message: "Max coupons per member reached as stated by coupon book config."

  /coupons/{coupon_code}/lock:
    post:
      tags: ["Coupons"]
      summary: Lock a coupon for redemption
      operationId: lockCoupon
      security:
        - BearerAuth: []
      parameters:
        - name: coupon_code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LockCouponRequest"
      responses:
        "200":
          description: Coupon locked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                alreadyLocked:
                  value:
                    message: "Coupon was already locked while trying to lock it"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                notAssigned:
                  value:
                    message: "Unable to redeem as coupon was not assigned to a member"
                alreadyRedeemed:
                  value:
                    message: "Unable to lock as coupon was already redeemed"
                locked:
                  value:
                    message: "Coupon already locked"
                expired:
                  value:
                    message: "Coupon book is expired or not yet available"

  /coupons/{coupon_code}/redeem:
    post:
      tags: ["Coupons"]
      summary: Redeem a coupon
      operationId: redeemCoupon
      security:
        - BearerAuth: []
      parameters:
        - name: coupon_code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RedeemCouponRequest"
      responses:
        "200":
          description: Coupon redeemed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                serializationError:
                  value:
                    message: "Coupon was not redeemed (serialization error)"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                notAssigned:
                  value:
                    message: "Unable to redeem as coupon was not assigned to a member"
                alreadyRedeemed:
                  value:
                    message: "Coupon is already redeemed"
                notLocked:
                  value:
                    message: "Coupon is not locked, cannot be redeemed"
                expired:
                  value:
                    message: "Coupon is expired or not yet available"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CouponBook:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Coupon Book ID
        name:
          type: string
          description: Coupon book name
        client_id:
          type: string
          description: Id of the client associated with the coupon book
        max_redemptions_per_coupon:
          type: integer
          description: How many times a member can redeem a particular coupon
        max_coupons_per_member:
          type: integer
          description: How many coupons from the current coupon book can be assigned to a member
        valid_from:
          type: string
          format: date-time
        valid_to:
          type: string
          format: date-time
        discount_type:
          type: string
          enum: [percentage, amount]
        discount_value:
          type: integer
        enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CouponGetResponse:
      type: object
      properties:
        limit:
          type: integer
          example: 20
        offset:
          type: integer
          example: 20
        total:
          type: integer
        page:
          type: integer
          example: 1
        total_pages:
          type: integer
        prev:
          type: string
          example: /coupon-books?limit=20&offset=0
        next:
          type: string
          example: /coupon-books?limit=20&offset=40
        data:
          type: array
          description: list of coupon books
          items:
            $ref: "#/components/schemas/Coupon"
    Coupon:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Coupon ID
        code:
          type: string
          description: Coupon code
        coupon_book_id:
          type: string
          format: uuid
          description: ID of the coupon book this coupon belongs to
        member_id:
          type: string
          format: uuid
          description: Member ID to whom the coupon is assigned
        status:
          type: string
          enum: [available, assigned, locked, redeemed]
          description: Current status of the coupon
        redemption_count:
          type: integer
          description: Number of times this coupon has been redeemed
        locked_at:
          type: string
          format: date-time
          nullable: true
          description: When the coupon was locked
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CouponBookGetResponse:
      type: object
      properties:
        limit:
          type: integer
          example: 20
        offset:
          type: integer
          example: 20
        total:
          type: integer
        page:
          type: integer
          example: 1
        total_pages:
          type: integer
        prev:
          type: string
          example: /coupon-books?limit=20&offset=0
        next:
          type: string
          example: /coupon-books?limit=20&offset=40
        data:
          type: array
          description: list of coupon books
          items:
            $ref: "#/components/schemas/CouponBook"
    CreateCouponBookRequest:
      type: object
      required:
        - name
        - client_id
        - max_coupons_per_member
        - valid_from
        - valid_to
        - discount_type
        - discount_value
      properties:
        name:
          type: string
          description: Coupon book name
        client_id:
          type: string
          description: Id of the client associated with the coupon book
        max_redemptions_per_coupon:
          type: integer
          default: 1
          description: How many times a member can redeem a particular coupon
        max_coupons_per_member:
          type: integer
          description: How many coupons from the current coupon book can be assigned to a member
        valid_from:
          type: string
          format: date-time
        valid_to:
          type: string
          format: date-time
        discount_type:
          type: string
          enum: [percentage, amount]
        discount_value:
          type: integer
        enabled:
          type: boolean
          default: false
        generate_coupons_amount:
          type: integer
          description: Amount of coupons to generate
          example: 1000
        generate_coupons_format:
          type: string
          example: "[A-Z]{3}-[0-9]{3}"
          description: Format of the coupons in a RegExp like string
    UploadCodeListRequest:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: "A csv file with the coupons to upload"
    AssignRandomCouponRequest:
      type: object
      required:
        - coupon_book_id
        - member_id
      properties:
        coupon_book_id:
          type: string
          format: uuid
          description: Coupon book ID
        member_id:
          type: string
          format: uuid
          description: Member ID to whom the coupon will be assigned
    AssignSpecificCouponRequest:
      type: object
      required:
        - member_id
      properties:
        member_id:
          type: string
          format: uuid
          description: Member ID to whom the coupon will be assigned
    LockCouponRequest:
      type: object
      required:
        - member_id
      properties:
        member_id:
          type: string
          format: uuid
          description: Member ID who is attempting to lock the coupon
    RedeemCouponRequest:
      type: object
      required:
        - member_id
      properties:
        member_id:
          type: string
          format: uuid
          description: Member ID who is redeeming the coupon
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
